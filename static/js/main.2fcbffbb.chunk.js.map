{"version":3,"sources":["components/Logout/Logout.js","components/Login/Login.js","components/Form/Form.js","components/Items/Items.js","components/List/List.js","components/Navbar/Navbar.js","reportWebVitals.js","index.js","firebase.js","App.js"],"names":["Logout","auth","currentUser","size","height","width","onClick","signOut","colorScheme","Login","provider","firebase","GoogleAuthProvider","setCustomParameters","prompt","signInWithPopup","type","label","Form","props","useState","input","setInput","quantity","setQuantity","handleOnSubmit","event","a","preventDefault","swal","text","icon","timer","uid","listRef","add","createdAt","firestore","FieldValue","serverTimestamp","className","onSubmit","placeholder","value","name","onChange","target","Add","Items","items","removeItem","editItem","editQuantity","MotionTr","motion","Tr","MotionInput","Input","MotionTBody","Tbody","colorStart","Color","colorEnd","id","edit","setEdit","isSorted","setIsSorted","variant","borderRadius","layout","sort","b","textA","toUpperCase","textB","comparison","createdAtA","seconds","createdAtB","map","item","index","variants","visible","opacity","hidden","initial","animate","transition","ease","delay","exit","isComplete","style","color","mix","length","hex","position","whileHover","scale","defaultValue","Delete","List","user","collection","doc","queryItems","orderBy","useCollectionData","idField","delete","update","Navbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","MotionBox","Box","useAuthState","removeAll","_","count","dangerMode","buttons","queryList","limit","get","snapshot","batch","docs","forEach","ref","commit","process","nextTick","grow","spacing","rightIcon"],"mappings":"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","file":"static/js/main.2fcbffbb.chunk.js","sourcesContent":["import { Button } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport { auth } from \"../../firebase\";\n\nfunction Logout() {\n  return (\n    auth.currentUser && (\n      <Button\n        size=\"md\"\n        height=\"48px\"\n        width=\"140px\"\n        onClick={() => auth.signOut()}\n        colorScheme=\"yellow\"\n      >\n        Sign Out\n      </Button>\n    )\n  );\n}\n\nexport default Logout;\n","import React from \"react\";\nimport GoogleButton from \"react-google-button\";\n\nimport firebase from \"firebase/app\";\nimport { auth } from \"../../firebase\";\n\nfunction Login() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.setCustomParameters({ prompt: \"select_account\" });\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <GoogleButton\n      onClick={signInWithGoogle}\n      type=\"dark\"\n      label=\"Log in with Google\"\n    />\n  );\n}\n\nexport default Login;\n","import \"./Form.css\";\n\nimport React, { useState } from \"react\";\nimport { Input, Button } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport swal from \"sweetalert\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport { auth } from \"../../firebase\";\n\nfunction Form(props) {\n  const [input, setInput] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n\n  const handleListChange = (event) => setInput(event.target.value);\n\n  const handleQuantityChange = (event) => setQuantity(event.target.value);\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n\n    if (input === \"\")\n      return swal({\n        text: \"Opps! Don't forget to label the item!\",\n        icon: \"warning\",\n        timer: 3000,\n      });\n\n    const { uid } = auth.currentUser;\n\n    await props.listRef.add({\n      text: input,\n      quantity: quantity === \"\" || quantity < \"1\" ? \"1\" : quantity,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n    });\n\n    setInput(\"\");\n    setQuantity(\"\");\n  };\n\n  return (\n    <form className=\"shopping-list-form\" onSubmit={handleOnSubmit}>\n      <Input\n        type=\"text\"\n        placeholder=\"Item\"\n        value={input}\n        name=\"text\"\n        className=\"shopping-list-input\"\n        onChange={handleListChange}\n      />\n      <Input\n        type=\"number\"\n        placeholder=\"Quantity\"\n        value={quantity}\n        name=\"text\"\n        className=\"quantity-input\"\n        onChange={handleQuantityChange}\n      />\n\n      <Button\n        type=\"submit\"\n        size=\"md\"\n        width=\"140px\"\n        className=\"shopping-list-button\"\n        colorScheme=\"green\"\n        onClick={handleOnSubmit}\n      >\n        <AddIcon />\n      </Button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useState } from \"react\";\nimport \"./Items.css\";\nimport Form from \"../Form/Form\";\nimport { DeleteIcon } from \"@chakra-ui/icons\";\nimport { motion } from \"framer-motion\";\nimport Color from \"color\";\n\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Input,\n  Box,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nfunction Items({ items, removeItem, editItem, editQuantity }) {\n  const MotionTr = motion(Tr);\n  const MotionInput = motion(Input);\n  const MotionTBody = motion(Tbody);\n\n  const colorStart = Color(\"#008DA3\");\n  const colorEnd = Color(\"#F0F2A6\");\n\n  const [edit, setEdit] = useState({\n    id: null,\n    text: \"\",\n    quantity: \"\",\n  });\n\n  const [isSorted, setIsSorted] = useState(false);\n\n  const handleSort = () => setIsSorted(!isSorted);\n  const sorter = (a, b) => {\n    if (isSorted) {\n      const textA = a.text.toUpperCase();\n      const textB = b.text.toUpperCase();\n\n      let comparison = 0;\n\n      if (textA > textB) comparison = 1;\n      else if (textA < textB) comparison = -1;\n\n      return comparison;\n    } else {\n      const createdAtA = a.createdAt === null ? 0 : a.createdAt.seconds;\n      const createdAtB = b.createdAt === null ? 0 : b.createdAt.seconds;\n\n      let comparison = 0;\n\n      if (createdAtA > createdAtB) comparison = 1;\n      else if (createdAtA < createdAtB) comparison = -1;\n\n      return comparison;\n    }\n  };\n\n  const submitUpdate = (value) => {\n    editItem(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\",\n    });\n  };\n\n  if (edit.id) {\n    return <Form edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return (\n    <Box className=\"item-component-box\">\n      <Table className=\"item-table\" variant=\"simple\" borderRadius=\"md\">\n        <Thead>\n          <Tr>\n            <Th>\n              Item\n              <span> </span>\n              <Button\n                className=\"sort\"\n                onClick={handleSort}\n                size=\"xs\"\n                colorScheme=\"blue\"\n              >\n                Sort: {isSorted ? \"A → Z\" : \"Recently Added\"}\n              </Button>\n            </Th>\n            <Th>Quantity</Th>\n            <Th></Th>\n          </Tr>\n        </Thead>\n        <MotionTBody layout className=\"item-tbody\">\n          {items &&\n            items.sort(sorter).map((item, index) => (\n              <MotionTr\n                layout\n                variants={{\n                  visible: { opacity: 1 },\n                  hidden: { opacity: 0 },\n                }}\n                initial=\"hidden\"\n                animate=\"visible\"\n                transition={{ ease: \"easeIn\", delay: 0.25 }}\n                exit={{ opacity: 0 }}\n                className={item.isComplete ? \"item-row complete\" : \"item-row\"}\n                key={index}\n              >\n                <Td key={item.id}>\n                  <MotionInput\n                    initial=\"out\"\n                    style={{\n                      color: colorStart\n                        .mix(colorEnd, (1 / items.length) * index)\n                        .hex(),\n                      position: \"static\",\n                    }}\n                    whileHover={{ scale: 1.2 }}\n                    type=\"text\"\n                    variant=\"unstyled\"\n                    defaultValue={item.text}\n                    value={item.text}\n                    onChange={(event) => editItem(item.id, event.target.value)}\n                  />\n                </Td>\n                <Td>\n                  <MotionInput\n                    whileHover={{ scale: 1.2 }}\n                    style={{\n                      color: colorStart\n                        .mix(colorEnd, (1 / items.length) * index)\n                        .hex(),\n                      position: \"static\",\n                    }}\n                    type=\"number\"\n                    variant=\"unstyled\"\n                    defaultValue={item.quantity}\n                    value={item.quantity}\n                    onChange={(event) => {\n                      editQuantity(item.id, event.target.value);\n                    }}\n                  />\n                </Td>\n                <Td className=\"icons\">\n                  <DeleteIcon\n                    onClick={() => removeItem(item.id, items)}\n                    className=\"delete-item\"\n                    style={{\n                      color: colorStart\n                        .mix(colorEnd, (1 / items.length) * index)\n                        .hex(),\n                      position: \"static\",\n                    }}\n                  />\n                </Td>\n              </MotionTr>\n            ))}\n        </MotionTBody>\n      </Table>\n    </Box>\n  );\n}\n\nexport default Items;\n","import React from \"react\";\nimport Form from \"../Form/Form\";\nimport Items from \"../Items/Items\";\nimport { Box } from \"@chakra-ui/react\";\nimport { firestore } from \"../../firebase\";\n\nimport \"./List.css\";\n\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfunction List(user) {\n  const listRef = firestore\n    .collection(\"Users\")\n    .doc(user.user.uid)\n    .collection(\"List\");\n  const queryItems = listRef.orderBy(\"createdAt\");\n\n  const [items] = useCollectionData(queryItems, { idField: \"id\" });\n\n  const removeItem = async (id) => {\n    await listRef.doc(id).delete();\n  };\n\n  const editItem = async (id, text) => {\n    await listRef.doc(id).update({ text: text });\n  };\n\n  const editQuantity = async (id, quantity) => {\n    await listRef.doc(id).update({ quantity: quantity });\n  };\n\n  return (\n    <Box id=\"list\">\n      <Box className=\"shopping-list-form\">\n        <Form listRef={listRef} />\n      </Box>\n      <Items\n        items={items}\n        removeItem={removeItem}\n        editItem={editItem}\n        editQuantity={editQuantity}\n      />\n    </Box>\n  );\n}\n\nexport default List;\n","import React from \"react\";\nimport Color from \"color\";\n\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n  const color = Color(\"#F0F2A6\");\n  // const colorEnd = Color(\"#F0F2A6\");\n\n  return (\n    <nav className=\"navbar\">\n      <h1\n        style={{\n          color: color.hex(),\n          position: \"static\",\n        }}\n      >\n        Shopping List\n      </h1>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB_WmLTaaYqHIDHN9qdTdZ7LkysjcbY0qQ\",\n  authDomain: \"shopping-list-project-5498d.firebaseapp.com\",\n  projectId: \"shopping-list-project-5498d\",\n  storageBucket: \"shopping-list-project-5498d.appspot.com\",\n  messagingSenderId: \"630525146277\",\n  appId: \"1:630525146277:web:197501e66d8d09406a894c\",\n  measurementId: \"G-887B8FV5LB\",\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n","import \"./App.css\";\n\nimport { ChakraProvider, Box, Button, VStack } from \"@chakra-ui/react\";\nimport List from \"./components/List/List\";\nimport Logout from \"./components/Logout/Logout\";\nimport Login from \"./components/Login/Login\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { firestore } from \"./firebase\";\nimport swal from \"sweetalert\";\n\nimport { WarningIcon } from \"@chakra-ui/icons\";\n\nimport { auth } from \"./firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nconst MotionBox = motion(Box);\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  const removeAll = async (_, count = 0) => {\n    let alertVal =\n      count > 0\n        ? null\n        : await swal(\n            \"Are you sure?\",\n            \"You are about to delete this awesome list...\",\n            {\n              dangerMode: true,\n              buttons: [\"Nevermind\", \"Yes\"],\n            }\n          );\n\n    if (!alertVal) return;\n\n    const listRef = firestore.collection(`Users/${user.uid}/List`);\n    const queryList = listRef.orderBy(\"createdAt\").limit(30);\n\n    const snapshot = await queryList.get();\n    const batchSize = snapshot.size;\n    if (batchSize === 0) {\n      // When there are no documents left, we are done\n      return;\n    }\n\n    // Delete documents in a batch\n    const batch = firestore.batch();\n    snapshot.docs.forEach((doc) => {\n      batch.delete(doc.ref);\n    });\n    await batch.commit();\n\n    // Recurse on the next process tick, to avoid\n    //exploding the stack.\n    process.nextTick(() => {\n      removeAll(_, ++count);\n    });\n  };\n\n  return (\n    <ChakraProvider>\n      <AnimatePresence>\n        <Box className=\"App\">\n          {user ? (\n            <div>\n              <MotionBox\n                variants={{\n                  visible: { opacity: 1 },\n                  hidden: { opacity: 0 },\n                }}\n                initial=\"hidden\"\n                animate=\"visible\"\n                transition={{ ease: \"easeIn\", delay: 0.5 }}\n                exit={{ opacity: 0 }}\n                className=\"columns\"\n              >\n                <Box className=\"app-box sub-column-1\"></Box>\n                <Box grow=\"\" className=\"app-list sub-column-2\">\n                  <List user={user} />\n                </Box>\n                <Box className=\"app-logout sub-column-3\">\n                  <VStack spacing=\"24px\">\n                    <Logout />\n                    <Button\n                      size=\"md\"\n                      height=\"48px\"\n                      width=\"140px\"\n                      colorScheme=\"red\"\n                      rightIcon={<WarningIcon />}\n                      onClick={removeAll}\n                    >\n                      Clear List\n                    </Button>\n                  </VStack>\n                </Box>\n              </MotionBox>\n            </div>\n          ) : (\n            <MotionBox\n              variants={{\n                visible: { opacity: 1 },\n                hidden: { opacity: 0 },\n              }}\n              initial=\"hidden\"\n              animate=\"visible\"\n              transition={{ ease: \"easeIn\", delay: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"login\"\n            >\n              <Login />\n            </MotionBox>\n          )}\n        </Box>\n      </AnimatePresence>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}